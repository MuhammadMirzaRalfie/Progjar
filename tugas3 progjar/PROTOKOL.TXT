FILE SERVER
TUJUAN: melayani client dalam request file server

ATURAN PROTOKOL:
- client harus mengirimkan request dalam bentuk string
- string harus dalam format
  REQUEST spasi PARAMETER
- PARAMETER dapat berkembang menjadi PARAMETER1 spasi PARAMETER2 dan seterusnya

REQUEST YANG DILAYANI:

LIST
* TUJUAN: untuk mendapatkan daftar seluruh file yang dilayani oleh file server
* PARAMETER: tidak ada
* RESULT:
- BERHASIL:
  - status: OK
  - data: list file
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

GET
* TUJUAN: untuk mendapatkan isi file dengan menyebutkan nama file dalam parameter
* PARAMETER:
  - PARAMETER1 : nama file
* RESULT:
- BERHASIL:
  - status: OK
  - data_namafile : nama file yang diminta
  - data_file : isi file yang diminta (dalam bentuk base64)
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

UPLOAD
* TUJUAN: untuk mengunggah file ke server
* PARAMETER:
  - PARAMETER1: nama file
  - PARAMETER2: isi file dalam bentuk base64
* RESULT:
- BERHASIL:
  - status: OK
  - data: File uploaded
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

DELETE
* TUJUAN: untuk menghapus file di server
* PARAMETER:
  - PARAMETER1: nama file yang akan dihapus
* RESULT:
- BERHASIL:
  - status: OK
  - data: File deleted
- GAGAL:
  - status: ERROR
  - data: pesan kesalahan

CATATAN:
Dalam pengembangan ini, protokol file server diperluas dengan perintah UPLOAD dan DELETE.
UPLOAD digunakan untuk mengirim file dari client ke server dalam bentuk base64 agar tidak terjadi kerusakan data.
DELETE digunakan untuk menghapus file tertentu dari server. 
Penambahan ini memberikan fleksibilitas penuh bagi client untuk mengelola file dari jarak jauh.
Semua hasil respon dikirim dalam format JSON dan diakhiri dengan karakter "\r\n\r\n"
